from math import sqrt
from collections import Counter
import csv

class Student:
	def __init__(self, *args):
		self.name, self.courage, self.ambition, self.intelligence, self.good = args
		self.distances = {ch['Name']: {"Distance": self.distance(ch), "House": ch["House"]} for ch in CHARACTERS}
		self.closests = sorted(self.distances.items(), key=lambda x: x[1]["Distance"])[:K]
		self.text_closests = '\n'.join([f'{name} dans la maison {attr["House"]}' for name, attr in self.closests])
		houses = Counter(attr["House"] for _, attr in self.closests)
		
		self.house = max(houses, key=houses.get)
		# max prends automatiquement l'occurence la plus élevée rencontrée en premier 

	def __str__(self):
		return f"Éleve {self.name} est envoyé à la maison {self.house.title()}.\nSes 5 plus proches voisins sont, dans l'ordre:\n{self.text_closests}"

	def distance(self, character):
		return sqrt((int(self.courage) - int(character["Courage"])) ** 2
			+ (int(self.ambition) - int(character["Ambition"])) ** 2
			+ (int(self.intelligence) - int(character["Intelligence"])) ** 2
			+ (int(self.good) - int(character["Good"])) ** 2)


def merge(table_perso, caracteristique_perso):
	with open(table_perso, mode='r', encoding='utf-8') as f:
		reader = csv.DictReader(f, delimiter=";")
		characters_tab = [{key : value.replace('\xa0', ' ') for key, value in element.items()} for element in reader]

	with open(caracteristique_perso, mode='r', encoding='utf-8') as f:
		reader = csv.DictReader(f, delimiter=';')
		characteristics_tab = [{key : value for key, value in element.items()} for element in reader]

	poudlard_characters = []

	for poudlard_character in characteristics_tab:
		for kaggle_character in characters_tab:
			if poudlard_character['Name'] == kaggle_character['Name']:
				poudlard_character.update(kaggle_character)
				poudlard_characters.append(poudlard_character)

	return poudlard_characters

def main():
	student_id = input(TEXTE_IHM)

	while student_id in ('1', '2', '3', '4', '5'):
		print(students[int(student_id) - 1])
		student_id = input("Un autre élève? ")

#          [Courage, Ambition, Intelligence, Good] -> index = Student_id - 1
STUDENTS = [[9, 2, 8, 9], [6, 7, 9, 7], [3, 8, 6, 3], [2, 3, 7, 8], [3, 4, 8, 8]]
CHARACTERS = merge("Characters.csv", "Caracteristiques_des_persos.csv")
IDX_CHARACTERS = {ch["Name"]: ch for ch in CHARACTERS}
TEXTE_IHM = """Pour quel élève souhaitez vous connaitre la maison :
Éleve 1 -> Courage : 9, Ambition : 2, Intelligence : 8, Good : 9
Éleve 2 -> Courage : 6, Ambition : 7, Intelligence : 9, Good : 7
Éleve 3 -> Courage : 3, Ambition : 8, Intelligence : 6, Good : 3
Éleve 4 -> Courage : 2, Ambition : 3, Intelligence : 7, Good : 8
Éleve 5 -> Courage : 3, Ambition : 4, Intelligence : 8, Good : 8
"""
K = 5

if __name__ == '__main__':
	students = [Student(index + 1, *attr) for index, attr in enumerate(STUDENTS)]
	main()